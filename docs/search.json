[
  {
    "objectID": "Schedule.html",
    "href": "Schedule.html",
    "title": "Cytometry in R",
    "section": "",
    "text": "Monday, October 06, 2025: “Workstation Setup”\nThe main focus of this first session is ensuring everyone’s computer is properly setup, and starts building familiarity with the infrastructure used for the rest of the course.\nParticipants install R, Rtools, Positron, Quarto, and Git; then setup and link a GitHub account. Introduces the concept of version control, and how in combination with Quarto it will be used for submitting optional take-home assignments. Finally, R packages in the flow cytometry context are discussed, including where they can be found (CRAN, Bioconductor, GitHub) and how to install them.\nMonday, October 13, 2025: “File Paths”\nThis second session covers file paths, and how they differ between operating systems (Linux, macOS and Windows). The goal is by the end of the session everyone can programmatically locate where there .fcs files are stored, list any other items present in the same folders, and assign alternate storage locations.\nMonday, October 20, 2025: “Inside an .FCS file”\nThis third session revolves around breaking open an .FCS file and seeing what are the individual components that make it up. In the process, we cover the concepts of types of data structures within R (vectors, matrices, data.frames, list).\nMonday, October 27, 2025: “Introduction to the Tidyverse”\nThis fourth session explores how the various Tidyverse packages can be used to rearrange data. We utilize the expression data we isolated from inside our experiment to manipulate data.frames and select for cells that meet certain criteria.\nMonday, November 03, 2025: “Gating Sets”\nThis fifth session involves learning about the flow cytometry infrastructure packages, namely FlowCore and flowWorkspace. We explore how they differ in function naming, memory utilization, and metadata retention. We practice adding metadata and filtering on the basis of these conditions.\nMonday, November 10, 2025: Visualizing with ggplot2\nThis sixth session provides an introduction to the ggplot2 package. We learn about various layer elements that in combination can be used to produce many types of plots. For this session, we visualize data from our fcs files with 1 and 2D histograms, as well as generate a few statistical summary plots. We provide links to additional helpful resources for those interested in learning more\nMonday, November 17, 2025: Transformations and compensation\nFor this seventh session, we explore how to transform (scale) flow cytometry data in R to more ressemble the plots we encounter using commercial software. We also explore how to apply compensation to conventional flow cytometry files.\nMonday, November 24, 2025: “It’s raining functions”\nThis eight session takes a detailed walk-through of what is a function, how arguments work, and how to create your own to do useful work and reduce the number of times code gets copied and pasted. We also cover how to use your own functions with walk and map from the purrr package.\nMonday, December 01, 2025: Downsampling and Concatenation\nThis ninth session explores how to downsample your fcs files to a desired number or percentage, and how to concatenate different samples together for use in downstream applications. We also briefly review how to create a new .fcs file.\nMonday, December 08, 2025: Spectral Signatures\nIn this tenth session we explore extracting fluorescent signatures from our samples, both beads and cells. We build on prior concepts to isolate median of the positive and negative gates. We finally wrap up showcasing various packages that have added ease of life for various steps.\nMonday, December 15, 2025: Similarities and Hotspots\nUtilizing the spectral signatures we retrieved in the prior session, we evaluate spectral similarity using cosine values and panel complexity with kappa. We finally evaluate collinearity by implementing the hotspot matrix.\nMonday, December 22, 2025: Data for Statistics\nLeveraging increasing familiarity with the various packages, we will retrieve the gates from our GatingSet and work on programmatically derriving metrics that are typically used for statistical analysis in cytometry. We will create a couple additional ggplot style plots to add to our arsenal.\nMonday, January 05, 2026:\nThis first session of the new year goes for a reach goal, how to carry out unmixing of raw .fcs files using the spectral signatures we have isolated from our unmixing controls. Once we evaluate the internals, we explore how various cytometry packages vary in their own individual approaches.\nMonday, January 12, 2026:\nIn this session, we explore openCyto and it’s automated gating templates. We explore various gating implementations and work on learning how to set the gate constraints to work for our own projects. We utilize a cell count dataset for this purpose.\nMonday, January 19, 2026:\nWe evaluate the data cleanup algorithms, PeacoQC, FlowAI, FlowCut and FlowClean, and compare the various elements that get targeted for removal. We discuss which of these are worthwhile and how to evaluate whether the algorithmic decisions make sense.\nMonday, January 26, 2026:\nWe explore unsupervised clustering approaches, primarily FlowSOM, Phenograph, and kmeans. We investigate additional ways of linking these approaches to our manual gating to evaluate the final clusters.\nMonday, February 02, 2026:\nWe investigate how to normalize cells using CytoNorm and CyCombine. We evaluate ridge plots and other approaches to carry this out further.\nMonday, February 09, 2026:\nWe perform tSNE and UMAP in R for our raw and unmixed samples. We also walk through the steps of linking to a Python installation in order to run PaCMAP and Phate visualizations.\nMonday, February 16, 2026:\nWe explore various existing implementations of annotation, that can be modified to label our various clusters and islands. We investigate how these function under the hood in their decision making.\nMonday, February 23, 2026:\nWhile we have been building familiarity with GitHub over the course, there is an art to investigating a new potential package to see if its worthwhile. This session we walk through the main points of how a Github repository is structured, and how to evaluate and use it, submit bug reports, etc.\nMonday, March 02, 2026:\nXML files all the way down\nMonday, March 09, 2026:\nIntegrating Bioconductor Workflows\nMonday, March 16, 2026:\nR packages for shits and giggles\nMonday, March 23, 2026:\nReproducibility and replicability\nMonday, March 30, 2026:\nValidating algorithmic tools\nMonday, April 06, 2026:\nQuarto Websites\nMonday, April 13, 2026:\nOpen Source Licenses\nMonday, April 20, 2026:\nDatabases and repositories\nMonday, April 27, 2026:"
  },
  {
    "objectID": "Schedule.html#cytometry-in-r-a-course-for-beginners",
    "href": "Schedule.html#cytometry-in-r-a-course-for-beginners",
    "title": "Cytometry in R",
    "section": "",
    "text": "Monday, October 06, 2025: “Workstation Setup”\nThe main focus of this first session is ensuring everyone’s computer is properly setup, and starts building familiarity with the infrastructure used for the rest of the course.\nParticipants install R, Rtools, Positron, Quarto, and Git; then setup and link a GitHub account. Introduces the concept of version control, and how in combination with Quarto it will be used for submitting optional take-home assignments. Finally, R packages in the flow cytometry context are discussed, including where they can be found (CRAN, Bioconductor, GitHub) and how to install them.\nMonday, October 13, 2025: “File Paths”\nThis second session covers file paths, and how they differ between operating systems (Linux, macOS and Windows). The goal is by the end of the session everyone can programmatically locate where there .fcs files are stored, list any other items present in the same folders, and assign alternate storage locations.\nMonday, October 20, 2025: “Inside an .FCS file”\nThis third session revolves around breaking open an .FCS file and seeing what are the individual components that make it up. In the process, we cover the concepts of types of data structures within R (vectors, matrices, data.frames, list).\nMonday, October 27, 2025: “Introduction to the Tidyverse”\nThis fourth session explores how the various Tidyverse packages can be used to rearrange data. We utilize the expression data we isolated from inside our experiment to manipulate data.frames and select for cells that meet certain criteria.\nMonday, November 03, 2025: “Gating Sets”\nThis fifth session involves learning about the flow cytometry infrastructure packages, namely FlowCore and flowWorkspace. We explore how they differ in function naming, memory utilization, and metadata retention. We practice adding metadata and filtering on the basis of these conditions.\nMonday, November 10, 2025: Visualizing with ggplot2\nThis sixth session provides an introduction to the ggplot2 package. We learn about various layer elements that in combination can be used to produce many types of plots. For this session, we visualize data from our fcs files with 1 and 2D histograms, as well as generate a few statistical summary plots. We provide links to additional helpful resources for those interested in learning more\nMonday, November 17, 2025: Transformations and compensation\nFor this seventh session, we explore how to transform (scale) flow cytometry data in R to more ressemble the plots we encounter using commercial software. We also explore how to apply compensation to conventional flow cytometry files.\nMonday, November 24, 2025: “It’s raining functions”\nThis eight session takes a detailed walk-through of what is a function, how arguments work, and how to create your own to do useful work and reduce the number of times code gets copied and pasted. We also cover how to use your own functions with walk and map from the purrr package.\nMonday, December 01, 2025: Downsampling and Concatenation\nThis ninth session explores how to downsample your fcs files to a desired number or percentage, and how to concatenate different samples together for use in downstream applications. We also briefly review how to create a new .fcs file.\nMonday, December 08, 2025: Spectral Signatures\nIn this tenth session we explore extracting fluorescent signatures from our samples, both beads and cells. We build on prior concepts to isolate median of the positive and negative gates. We finally wrap up showcasing various packages that have added ease of life for various steps.\nMonday, December 15, 2025: Similarities and Hotspots\nUtilizing the spectral signatures we retrieved in the prior session, we evaluate spectral similarity using cosine values and panel complexity with kappa. We finally evaluate collinearity by implementing the hotspot matrix.\nMonday, December 22, 2025: Data for Statistics\nLeveraging increasing familiarity with the various packages, we will retrieve the gates from our GatingSet and work on programmatically derriving metrics that are typically used for statistical analysis in cytometry. We will create a couple additional ggplot style plots to add to our arsenal.\nMonday, January 05, 2026:\nThis first session of the new year goes for a reach goal, how to carry out unmixing of raw .fcs files using the spectral signatures we have isolated from our unmixing controls. Once we evaluate the internals, we explore how various cytometry packages vary in their own individual approaches.\nMonday, January 12, 2026:\nIn this session, we explore openCyto and it’s automated gating templates. We explore various gating implementations and work on learning how to set the gate constraints to work for our own projects. We utilize a cell count dataset for this purpose.\nMonday, January 19, 2026:\nWe evaluate the data cleanup algorithms, PeacoQC, FlowAI, FlowCut and FlowClean, and compare the various elements that get targeted for removal. We discuss which of these are worthwhile and how to evaluate whether the algorithmic decisions make sense.\nMonday, January 26, 2026:\nWe explore unsupervised clustering approaches, primarily FlowSOM, Phenograph, and kmeans. We investigate additional ways of linking these approaches to our manual gating to evaluate the final clusters.\nMonday, February 02, 2026:\nWe investigate how to normalize cells using CytoNorm and CyCombine. We evaluate ridge plots and other approaches to carry this out further.\nMonday, February 09, 2026:\nWe perform tSNE and UMAP in R for our raw and unmixed samples. We also walk through the steps of linking to a Python installation in order to run PaCMAP and Phate visualizations.\nMonday, February 16, 2026:\nWe explore various existing implementations of annotation, that can be modified to label our various clusters and islands. We investigate how these function under the hood in their decision making.\nMonday, February 23, 2026:\nWhile we have been building familiarity with GitHub over the course, there is an art to investigating a new potential package to see if its worthwhile. This session we walk through the main points of how a Github repository is structured, and how to evaluate and use it, submit bug reports, etc.\nMonday, March 02, 2026:\nXML files all the way down\nMonday, March 09, 2026:\nIntegrating Bioconductor Workflows\nMonday, March 16, 2026:\nR packages for shits and giggles\nMonday, March 23, 2026:\nReproducibility and replicability\nMonday, March 30, 2026:\nValidating algorithmic tools\nMonday, April 06, 2026:\nQuarto Websites\nMonday, April 13, 2026:\nOpen Source Licenses\nMonday, April 20, 2026:\nDatabases and repositories\nMonday, April 27, 2026:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cytometry in R",
    "section": "",
    "text": "To see our tentative schedule, please click here:\nTo sign up, please complete the Google Form and we will keep you updated:\n\nMotivation\n“Cytometry in R” is a weekly mini-course being offered both in-person and online by the Flow Cytometry Shared Resource staff at the University of Maryland Greenebaum Comprehensive Cancer Center. Its primary audience is for those with prior flow cytometry knowledge, who have limited previous experience with with the programming language R.\nWhile many cytometry enthusiast express an interest in learning how to carry out flow cytometry analyses in R, they often do not know where to start. Additionally, many of the limited existed resources are focused towards users with intermediate bioinformatic skills, contributing to a greater barrier for entry. Our motivation in offering this mini-course tailored towards beginners is to make the learning journey smoother than the one we experienced.\n\n\nRationale\nWhile designing the course, we kept the following concepts in mind:\n\nBeginning coders benefit both by having detailed examples that they can initially work through on their own time, as well as less defined problems that through troubleshooting enable the acquisition of the thought-process and skills needed for coding.\nSome topics will take individuals a longer time to fully grasp. Providing a format and resources that enable being able to revisit the material multiple times is incredibly helpful. Likewise, life is busy, and missing a workshop session is highly probable. If this happens, it shouldn’t make or break the ability of the individual to understanding the rest of the course.\nConsistency is key, and being able to apply what you are learning to your own datasets, files, and questions of interest helps achieve this.\n\n\n\nCost\nIs there a cost to participate? No, it’s absolutely free! Is there a catch? Yes, you learn R, and may wind up with strong feelings about flowframes vs. cytoframes. This is also our first year offering this course, so we will sporadically ask you to fill out a feedback form to help us improve.\n\n\nFormat\nEach week, the mini-course will cover a particular topic for an hour. This individual class is offered on multiple days, at different times, both in-person and online. You are invited to attend whichever day best fits your schedule for that week. If life gets busy and you can’t make your regular day, you have an additional four opportunities for that week covering the same topic.\nIn-person, we are tentatively planning on Monday, Wednesday, Friday from 4-5 pm EST in Bressler 7-035. Virtual options are planned for Tuesday and Thursday via livestream on YouTube and the Cytometry Discord. The virtual times will be determined based on interest of the participants.\nEach session starts with 10-15 minutes of Background about the session topic, and it’s relevance to both R and Cytometry. Over the next 30 minutes, participants work through Hands-on examples, using either their own data, or an example dataset that we will provide. Instructors assist where needed and answer questions during this time. The final 10 minutes we reconvene as a group, Share insights and troubleshoot any remaining stickpoints. Finally, we provide links to useful resources for those who want to learn more about the topic, as well as provide two optional take-home problems.\nEach week, we will update the website with the course materials for the week. These will typically consist of the Quarto Markdown document, which is used to explain and run the R code. If you have your own data, you can bring your own data! If you don’t have some, or want to follow along, we will also make available some of our data that you can utilize. All course materials for the given week will be made available online via our course website and course GitHub repository. In our commitment to open-source and open-science, all teaching materials are freely offered under a CC-BY-SA license, while all code examples are offered under the AGPL3-0 copyleft license.\nThe take-home problems are intended to get you to work with your own data on similar problems in a not-so-structured manner. The challenges you encounter in solving them will help foster the problem-solving/debugging/way-of-thinking skills needed to successfully work with code. Both works-and-progress and solved problems can be discussed and submitted on our GitHub repository to the designated take-home folder of the week, where both instructors and others taking the course can provide feedback.\n\n\nComputing Requirements\nFor those attending online, you will need a computer with internet access. Operating system shouldn’t matter, as we will be offering code examples for Linux, Mac and Windows. As with all things flow-cytometry software, a good CPU with multiple cores, more RAM, and greater storage space are generally helpful, but not deal breakers.\nYou will need to be able to install the required software (R, Rtools, Positron, Git, Quarto) as well as intstall and compile R packages from the CRAN and Bioconductor repositories (as well as a few GitHub-based R packages). For those using university or company administered computers, please be aware that you may not have the necessary permissions to install these directly, and may need to reach out to your IT department to help get these initial requirements set up. If you are using your own computer, congratulations, you are your system administrator, and should already have the necessary permissions.\nFor those attending in-person, we have set up a pop-up computer lab in the conference room. For those who arrive early, we have a limited number of second screens with provided mouse and keyboard that you can plug a laptop into via HDMI cable to set up a workstation. For those arriving later, the room has enough space (and electrical plugs) for 20 people, but you will need to balance a laptop on your lap. If you have your own laptop, feel free to bring it. If you don’t have a laptop, the flow core has 6 loaner laptops running Linux that we can let participants use for that session.\n\n\nTentative Schedule\nTo see our tentative schedule, please click here:\nTo sign up, please complete the Google Form and we will keep you updated:\nThe course material is licensed under under the Creative Commons Attribution-Share Alike 4.0 International License. The code examples provided in this course are licensed under the GNU AFFERO GENERAL PUBLIC LICENSE (AGPL-3.0)"
  }
]